<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2011, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>
    <bool name="config_batterySdCardAccessibility">true</bool>

    <bool name="config_allowAllRotations">true</bool>

    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,2,-1,true"</item>
        <item>"bluetooth,7,7,0,-1,true"</item>
        <item>"ethernet,9,9,9,-1,true"</item>
    </string-array>

    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"7,1"</item>
        <item>"9,1"</item>
    </string-array>

    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"rndis0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan\\d"</item>
    </string-array>

    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bt-pan"</item>
    </string-array>

    <string translatable="false" name="config_ethernet_iface_regex">(eth|usb)\\d</string>

    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
        <item>9</item>
    </integer-array>

    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>30</item>
        <item>50</item>
        <item>65</item>
        <item>80</item>
        <item>100</item>
        <item>200</item>
        <item>300</item>
        <item>400</item>
        <item>500</item>
        <item>600</item>
        <item>700</item>
        <item>900</item>
        <item>1100</item>
        <item>1400</item>
        <item>1700</item>
        <item>2100</item>
        <item>2500</item>
        <item>3000</item>
        <item>4000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>20</item>
        <item>40</item>
        <item>60</item>
        <item>80</item>
        <item>110</item>
        <item>127</item>
        <item>135</item>
        <item>143</item>
        <item>152</item>
        <item>159</item>
        <item>168</item>
        <item>176</item>
        <item>183</item>
        <item>191</item>
        <item>200</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

    <!-- Array of output values for button backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>0</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
        <item>255</item>
    </integer-array>

    <integer name="config_downloadDataDirSize">200</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">3</integer>
  <!-- Minimum allowable screen brightness to use in a very dark room. -->
    <integer name="config_screenBrightnessDark">3</integer>
   <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">10</integer>

    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>


    <bool name="config_voice_capable">false</bool>
    <bool name="config_sms_capable">false</bool>

<!--    <bool name="config_hasRemovableLid">true</bool> -->
    <bool name="config_lidControlsSleep">true</bool>
<!--    <integer name="config_lidOpenRotation">0</integer> -->
    <integer name="config_lidKeyboardAccessibility">1</integer>

   <bool name="config_showNavigationBar">true</bool>
   <integer name="config_multiuserMaximumUsers">8</integer>
   <bool name="config_enableMultiUserUI">true</bool>

    <!-- Enable lockscreen translucent decor by default -->
    <bool name="config_enableLockScreenTranslucentDecor">true</bool>

    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">false</bool>

<!--    <bool name="config_hasDockBattery">true</bool> -->
<!--
    <bool name="config_hasTouchpad">true</bool>
-->
    <bool name="config_dreamsEnabledByDefault">false</bool>
    <bool name="config_dreamsActivatedOnDockByDefault">false</bool>
<!--     <bool name="config_useDevInputEventForAudioJack">true</bool> -->
    <bool name="config_safe_media_volume_enabled">false</bool>

<!-- enabling WifiDisplay(Miracast Source)-->
<!--    <bool name="config_enableWifiDisplay">true</bool> -->


    <!-- Enable Google Network Location Services -->
    <string-array name="config_locationProviderPackageNames" translatable="false">

    <!-- The standard AOSP fused location provider -->
    <item>com.android.location.fused</item>

    <!-- The Google provider -->
    <item>com.google.android.gms</item>
    </string-array>


    <string-array translatable="false" name="config_globalActionsList">
        <item>power</item>
        <item>reboot</item>
        <item>airplane</item>
        <item>silent</item>
        <item>bugreport</item>
        <item>users</item>
    </string-array>

    <!-- enable doze powersaving mode -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <bool name="config_freeformWindowManagement">true</bool>


</resources>
